<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.7" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <NonVisualComponents>
    <Menu class="javax.swing.JMenuBar" name="mainMenuBar">
      <SubComponents>
        <Menu class="javax.swing.JMenu" name="fileMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="File"/>
          </Properties>
          <SubComponents>
            <Menu class="javax.swing.JMenu" name="newMenuItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/New.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="New"/>
              </Properties>
              <SubComponents>
                <MenuItem class="javax.swing.JMenuItem" name="blankGraphItem">
                  <Properties>
                    <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                      <KeyStroke key="Ctrl+N"/>
                    </Property>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/Bin.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Blank Graph"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="blankGraphItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator6">
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="treeGraphItem">
                  <Properties>
                    <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                      <KeyStroke key="Shift+Ctrl+T"/>
                    </Property>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/New.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Tree Graph"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="treeGraphItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="connectedGraphItem">
                  <Properties>
                    <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                      <KeyStroke key="Shift+Ctrl+C"/>
                    </Property>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/New.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Connected Graph"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="connectedGraphItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="randomGraphItem">
                  <Properties>
                    <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                      <KeyStroke key="Shift+Ctrl+R"/>
                    </Property>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/New.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Random Graph"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="randomGraphItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="twoTreeMatchingItem">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/New.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Two trees + Matching"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="twoTreeMatchingItemActionPerformed"/>
                  </Events>
                </MenuItem>
              </SubComponents>
            </Menu>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator3">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="openItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+O"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/open.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Open"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="openItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="reloadItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+R"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/reload.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Reload"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="reloadItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator12">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="saveItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+S"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Save.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Save"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="saveItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="saveAsItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Shift+Ctrl+S"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Save.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Save As..."/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="saveAsItemActionPerformed"/>
              </Events>
            </MenuItem>
            <Menu class="javax.swing.JMenu" name="exportMenu">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/tools.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Export..."/>
              </Properties>
              <SubComponents>
                <MenuItem class="javax.swing.JMenuItem" name="jpgItem">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tools.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Export to JPG"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jpgItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="gifItem">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tools.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Export to GIF"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="gifItemActionPerformed"/>
                  </Events>
                </MenuItem>
              </SubComponents>
            </Menu>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator4">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="printItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+P"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Print.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Print"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="printItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator5">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="quitItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+Q"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Exit.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Quit"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="quitItemActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="editMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="Edit"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="undoItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+Z"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Undo.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Undo"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="undoItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="redoItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+Y"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Redo.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Redo"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="redoItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator7">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="cutItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+X"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Cut.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Cut"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="cutItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="copyItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+C"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Copy.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Copy"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="copyItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="pasteItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+V"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Paste.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Paste"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="pasteItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator1">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="clearSelectedItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="DELETE"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Delete.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Clear Selected"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="clearSelectedItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="clearAllItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="DELETE"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Delete.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Clear all"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="clearAllItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator2">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="selectAllItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+A"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/SelectAll.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Select all"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="selectAllItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="deselectAllItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+A"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/DeSelect.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Deselect all"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="deselectAllItemActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="viewMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="View"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="zoomInItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+ADD"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/ZoomIn.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Zoom In"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomInItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="zoomOutItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+MINUS"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/ZoomOut.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Zoom Out"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomOutItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="zoomSelectedItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+0"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/ZoomArea.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Zoom Selected"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zoomSelectedItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="fitContentItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+EQUALS"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/FitContent.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Fit Content"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="fitContentItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator11">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="gridItem">
              <Properties>
                <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                  <KeyStroke key="Ctrl+G"/>
                </Property>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Grid.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Grid"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="gridItemActionPerformed"/>
              </Events>
            </MenuItem>
            <Menu class="javax.swing.JMenu" name="geometricTranformationsMenu">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/Class.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Geometric Tranformations"/>
              </Properties>
              <SubComponents>
                <MenuItem class="javax.swing.JMenuItem" name="scaleItem">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Scale"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="scaleItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="rotateItem">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Rotate"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="rotateItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="mirrorXItem">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="X-Axis Mirror"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="mirrorXItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="mirrorYItem">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Y-Axis Mirror"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="mirrorYItemActionPerformed"/>
                  </Events>
                </MenuItem>
              </SubComponents>
            </Menu>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator8">
            </MenuItem>
            <Menu class="javax.swing.JMenu" name="analyzeMenu">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/tools.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Analyze Graph"/>
              </Properties>
              <SubComponents>
                <MenuItem class="javax.swing.JMenuItem" name="planarityMenu">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Planarity"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="planarityMenuActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="acyclicnessMenu">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Acyclicness"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="acyclicnessMenuActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="connectivityMenu">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Connectivity"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="connectivityMenuActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="biconnectivityMenu">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Biconnectivity"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="biconnectivityMenuActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="bipartitenessMenu">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Bipartiteness"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="bipartitenessMenuActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="stNumberingMenu">
                  <Properties>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="st-Numbering"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="stNumberingMenuActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="shortestCycleMenu">
                  <Properties>
                    <Property name="accelerator" type="javax.swing.KeyStroke" editor="org.netbeans.modules.form.editors.KeyStrokeEditor">
                      <KeyStroke key="Ctrl+U"/>
                    </Property>
                    <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                      <Image iconType="3" name="/resources/tool.gif"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Shortest Cycle"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="shortestCycleMenuActionPerformed"/>
                  </Events>
                </MenuItem>
              </SubComponents>
            </Menu>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator9">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="nodeAttributesItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/pencil.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Node Attributes"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="nodeAttributesItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="edgeAttributesItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/pencil.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Edge Attributes"/>
              </Properties>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="layoutMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="Layout"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="orthogonalItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/layout.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Orthogonal"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="orthogonalItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="circularItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/layout.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Circular"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="circularItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="treeItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/layout.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Tree"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="treeItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="organicItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/layout.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Organic"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="organicItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="smartOrganicItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/layout.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Smart Organic"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="smartOrganicItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JPopupMenu$Separator" name="jSeparator10">
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="springEmbedderItem">
              <Properties>
                <Property name="icon" type="javax.swing.Icon" editor="org.netbeans.modules.form.editors2.IconEditor">
                  <Image iconType="3" name="/resources/layout.gif"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Spring Embedder"/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="springEmbedderItemActionPerformed"/>
              </Events>
            </MenuItem>
          </SubComponents>
        </Menu>
      </SubComponents>
    </Menu>
  </NonVisualComponents>
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
    <Property name="title" type="java.lang.String" value="Graph Drawing Tool"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="menuBar" type="java.lang.String" value="mainMenuBar"/>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,2,-47,0,0,4,-122"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout">
    <Property name="horizontalGap" type="int" value="20"/>
    <Property name="verticalGap" type="int" value="20"/>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="mainPanel">
      <Properties>
        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
          <Border info="org.netbeans.modules.form.compat2.border.EmptyBorderInfo">
            <EmptyBorder bottom="10" left="10" right="10" top="10"/>
          </Border>
        </Property>
        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[300, 300]"/>
        </Property>
      </Properties>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_CreateCodePre" type="java.lang.String" value="this.view = new y.view.Graph2DView();&#xa;this.view.setSize(330, 330);&#xa;this.graphRealizer = new layout.GraphRealizer(this.view);"/>
        <AuxValue name="JavaCodeGenerator_allCodePost" type="java.lang.String" value="editMode = new y.view.EditMode() &#xa;{&#xa;    protected void nodeCreated(y.base.Node v)&#xa;    {&#xa;        graphRealizer.updateNode(v);&#xa;        view.getGraph2D().setLabelText(v, &quot;&quot;+view.getGraph2D().nodeCount());&#xa;        view.getGraph2D().getRealizer(v).getLabel().setVisible(true);&#xa;    }&#xa;};&#xa;editMode.setPopupMode(new y.view.PopupMode(){&#xa;    /**&#xa;    * Provides a JPopupMenu that is displayed for the given node.&#xa;    */&#xa;    public javax.swing.JPopupMenu getNodePopup(y.base.Node node) &#xa;    {&#xa;        //Hack to pass object node as parameter to inner class&#xa;        final y.base.Node v = node;&#xa;&#xa;        javax.swing.JPopupMenu popupMenu = new javax.swing.JPopupMenu();&#xa;&#xa;        javax.swing.JMenuItem editLabel = new javax.swing.JMenuItem(view.getGraph2D().getLabelText(node).equals(&quot;&quot;)? &quot;Add Label&quot; : &quot;Edit Label&quot;);&#xa;        editLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/resources/Tools.gif&quot;)));&#xa;        editLabel.addActionListener(new java.awt.event.ActionListener() {&#xa;            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;                javax.swing.JTextField labelTextField = new javax.swing.JTextField(view.getGraph2D().getLabelText(v));&#xa;                int result = javax.swing.JOptionPane.showOptionDialog(null, new Object[] {&quot;Label: &quot;, labelTextField}, (view.getGraph2D().getLabelText(v).equals(&quot;&quot;)? &quot;Add Label&quot; : &quot;Edit Label&quot;), javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, null, null);&#xa;                if (result == javax.swing.JOptionPane.OK_OPTION)&#xa;                {&#xa;                    view.getGraph2D().setLabelText(v, labelTextField.getText());&#xa;                    view.updateView();&#xa;                }   &#xa;            }&#xa;        });&#xa;&#xa;        javax.swing.JMenuItem removeVertex = new javax.swing.JMenuItem(&quot;Delete Vertex&quot;);&#xa;        removeVertex.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/resources/Delete.gif&quot;)));&#xa;        removeVertex.addActionListener(new java.awt.event.ActionListener() {&#xa;            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;                view.getGraph2D().removeSelection();&#xa;                view.updateView();&#xa;            }&#xa;        });&#xa;&#xa;        popupMenu.add(editLabel);&#xa;        popupMenu.add(removeVertex);&#xa;        return popupMenu;&#xa;    }    &#xa;&#xa;    /**&#xa;    * Provides a zoom in/out JPopupMenu.&#xa;    */&#xa;    public javax.swing.JPopupMenu getPaperPopup(double x, double y)&#xa;    {&#xa;        javax.swing.JPopupMenu popupMenu = new javax.swing.JPopupMenu();&#xa;&#xa;        javax.swing.JMenuItem zoomIn = new javax.swing.JMenuItem(&quot;Zoom In&quot;);&#xa;        zoomIn.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/resources/ZoomIn.gif&quot;)));&#xa;        zoomIn.addActionListener(new java.awt.event.ActionListener() {&#xa;            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;                view.setZoom(view.getZoom()*1.2);&#xa;                view.updateView();&#xa;            }&#xa;        });&#xa;        javax.swing.JMenuItem zoomOut = new javax.swing.JMenuItem(&quot;Zoom Out&quot;);&#xa;        zoomOut.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/resources/ZoomOut.gif&quot;)));&#xa;        zoomOut.addActionListener(new java.awt.event.ActionListener() {&#xa;            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;                view.setZoom(view.getZoom()*0.8);&#xa;                view.updateView();&#xa;            }&#xa;        });&#xa;        javax.swing.JMenuItem fitContent = new javax.swing.JMenuItem(&quot;Fit Content&quot;);  &#xa;        fitContent.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/resources/FitContent.gif&quot;)));              &#xa;        fitContent.addActionListener(new java.awt.event.ActionListener() {&#xa;            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;                view.fitContent();&#xa;                view.updateView();&#xa;            }&#xa;        });&#xa;        javax.swing.JMenuItem indexLabel = new javax.swing.JMenuItem(&quot;Index Labels&quot;);  &#xa;        indexLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/resources/FitContent.gif&quot;)));              &#xa;        indexLabel.addActionListener(new java.awt.event.ActionListener() {&#xa;            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;                for (y.base.NodeCursor nc = view.getGraph2D().nodes(); nc.ok(); nc.next())&#xa;                {&#xa;                    view.getGraph2D().setLabelText(nc.node(), &quot;&quot;+(nc.node().index()+1));&#xa;                }&#xa;                view.updateView();&#xa;            }&#xa;        });&#xa;        javax.swing.JMenuItem clear = new javax.swing.JMenuItem(&quot;Clear Graph&quot;);&#xa;        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource(&quot;/resources/Delete.gif&quot;)));&#xa;        clear.addActionListener(new java.awt.event.ActionListener() {&#xa;            public void actionPerformed(java.awt.event.ActionEvent evt) {&#xa;                view.getGraph2D().clear();&#xa;                view.updateView();&#xa;            }&#xa;        });&#xa;        popupMenu.add(zoomIn);&#xa;        popupMenu.add(zoomOut);&#xa;        popupMenu.add(fitContent);&#xa;        popupMenu.addSeparator();&#xa;        popupMenu.add(indexLabel);&#xa;        popupMenu.addSeparator();&#xa;        popupMenu.add(clear);&#xa;        return popupMenu;&#xa;    }&#xa;});&#xa;editMode.allowBendCreation(true);&#xa;&#xa;view.addMouseWheelListener(new java.awt.event.MouseWheelListener() &#xa;{&#xa;    public void mouseWheelMoved(MouseWheelEvent mwe) &#xa;    {&#xa;        view.setZoom(view.getZoom()*(mwe.getWheelRotation() &lt; 0 ? 0.8 : 1.2));&#xa;        view.updateView();&#xa;    }&#xa;});&#xa;&#xa;view.addViewMode(this.editMode);&#xa;view.setGridMode(true);&#xa;view.setGridVisible(true);&#xa;view.setGridResolution(25);&#xa;view.setGridType(y.view.View2DConstants.GRID_POINTS);&#xa;mainPanel.add(this.view, java.awt.BorderLayout.CENTER);&#xa;view.requestFocus();&#xa;&#xa;//Clipboard&#xa;this.clipboard = new y.view.Graph2DClipboard(view);&#xa;//Undo-Redo Manager    &#xa;this.undoManager = new y.view.Graph2DUndoManager();&#xa;this.view.getGraph2D().addGraphListener(undoManager);&#xa;this.view.getGraph2D().setBackupRealizersHandler(undoManager);&#xa;this.undoManager.setViewContainer(view);&#xa;//Add Graph Listener                &#xa;this.view.getGraph2D().addGraphListener(new y.base.GraphListener() &#xa;{    &#xa;    public void onGraphEvent(y.base.GraphEvent gde) &#xa;    {&#xa;        infoLabel.setText(&quot;Number of Vetrices: &quot; + view.getGraph2D().nodeCount() + &quot;     Number of Edges: &quot;+view.getGraph2D().edgeCount());&#xa;        for (java.util.Iterator&lt;y.view.Drawable&gt; it = view.getDrawables().iterator(); it.hasNext() ;)&#xa;        {&#xa;            view.removeDrawable(it.next());&#xa;        }&#xa;        view.updateView();&#xa;    }&#xa;});"/>
      </AuxValues>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
          <BorderConstraints direction="Center"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout">
        <Property name="verticalGap" type="int" value="10"/>
      </Layout>
      <SubComponents>
        <Container class="javax.swing.JPanel" name="progressBarPanel">
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_SerializeTo" type="java.lang.String" value="MainFrame_progressBarPanel"/>
          </AuxValues>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
              <BorderConstraints direction="Last"/>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
            <Property name="columns" type="int" value="2"/>
            <Property name="horizontalGap" type="int" value="10"/>
            <Property name="rows" type="int" value="1"/>
            <Property name="verticalGap" type="int" value="10"/>
          </Layout>
          <SubComponents>
            <Component class="javax.swing.JLabel" name="infoLabel">
              <Properties>
                <Property name="text" type="java.lang.String" value="Number of Vetrices: 0     Number of Edges: 0"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JProgressBar" name="progressBar">
              <Properties>
                <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                  <Dimension value="[250, 20]"/>
                </Property>
                <Property name="stringPainted" type="boolean" value="true"/>
              </Properties>
            </Component>
          </SubComponents>
        </Container>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
